
# Starter pipeline
# Pull from Repo
# Import Project into Docekr SOAtest CLI container and Run
# Azure YAML docs:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

# Set Up Project
steps:
- script: |
    echo "Starting Pipeline Execution."
    echo "Create ./tmp directory for volume mount."
    mkdir tmp
    echo ${PWD}
    
    # Get Artifacts from Jenkins
    # curl -u $(license.server.username):$(license.server.password) '$(jenkins.url)/job/Parabank-Jenkins%20(main%20branch)/lastSuccessfulBuild/artifact/parabank/target/parabank-3.0.0-SNAPSHOT.war' --output "tmp/parabank.war"
    
    # Set Up and write .properties file
    echo  -e "\n~~~\nSetting up and creating cpptestcli.properties file.\n"
    echo $"
    parasoft.eula.accepted=true
    cpptest.license.network.edition=server_compliance_edition
    license.network.enabled=true
    license.network.auth.enabled=true
    license.network.password=$(license.server.password)
    license.network.url=$(license.server.url)
    license.network.user=$(license.server.username)
    report.dtp.publish=false
    build.id=$(build.id)" >> tmp/cpptestcli.properties
    echo -e "\nDebug -- Verify workspace contents.\n"
    ls -R
    echo -e "\nDebug -- Verify cpptestcli.properties file contents."
    cat tmp/cpptestcli.properties

    # Run Docker container with mount and run tests
    echo -e "\n~~~\nRun cpptestcli Docker container & mount ./tmp volume.\n"
    
    docker --version

    docker run -i \
    -u 0:0 \
    -v "$(pwd)/tmp:/tmp" \
    parasoft/cpptest:latest /bin/bash -c " \
    cat /tmp/cpptestcli.properties; \
    cpptestcli \
    -settings /tmp/cpptestcli.properties \
    -compiler gcc_10-64 \
    -config 'builtin://Recommended Rules' \
    -module /opt/parasoft/cpptest/examples/ATM \
    -report /tmp \
    -trace make all"

    # echo -e "\nDebug -- Verify ./tmp contents\n"
    # ls -R $(pwd)/tmp
  displayName: Run Static Analysis
  env:
    pwd: $(Build.Repository.LocalPath)

# Publish Test Results
- task: PublishParasoftResults@1
  inputs:
    resultsFiles: |
      **/rep*.xml
      **/rep*.sarif
      **/coverage.xml
    mergeTestResults: true
